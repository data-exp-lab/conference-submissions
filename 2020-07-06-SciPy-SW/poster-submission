Title: Using Domain Storytelling to Develop a Context Aware Framework to Support Interdisciplinary Scientific Inquiry in yt

Short Summary:

We are developing a vocabulary and grammar for domain agnostic analysis we can implement in yt to create a flexible and dynamic data visualization and analysis framework using domain storytelling. The yt team is developing a context aware domain system for natural science domains by encoding how domain experts analyze, interpret, and store data into a JSON schema. We are using domain storytelling as a method for capturing domain expert data analysis mental models, and using computational astrophysics as an example domain. This involves having a domain scientists describe their computational workflow using pictographs and other flowchart mechanisms. Once a domain use case is recorded, the related computation is connected to each workflow step.

Abstract:

yt is an open source python library designed for scientific analysis and visualization of volumetric data from the physical sciences, and is part of the rapidly growing open source scientific python ecosystem. This exponential growth has diversified the ecosystem but despite overlapping functionality and purpose, open source scientific libraries can face difficulties attracting and keeping contributors for existing tools. Additionally, these essential tools require substantial effort to learn and incorporate into a research workflow; this leads researchers to remain conservative, sticking to what they know. The yt team is building a context aware framework using domain knowledge data gathered using a method called domain storytelling to counter the challenges yt has experienced with technical and community growth.

The yt team is implementing a context aware reference framework encoded into a JSON schema organized using natural science domain knowledge. The JSON schema is designed to be a fluid mental model within the software, and will provide a layer of separation between the domain specific data and the underlying yt data structures. To build this schema, domain knowledge including jargon, data analysis tasks, and implicit rules are captured using domain storytelling; a technique that uses pictographs and use cases to illustrate a workflow. A domain story is ‘told’ by having a domain scientist either describe or draw each step in their workflow, including interactions with their software tools, the data, and their internal thought process. We are collecting domain stories to capture two elements: high level workflow steps and underlying code examples to complete those steps. From these use cases, we are identifying data analysis patterns that can be described using a single vocabulary and set of rules to be implemented in python and yt.

By abstracting out the workflow from specific tools, we lay a foundation of data analysis principles that can be leveraged to identify both overlapping elements and gaps in code as well as mental model deficiencies in scientific software tools.  As an example, we are developing a computational astrophysics domain specific language from the domain storytelling data collection to formalize the vocabulary and grammar of routine data analysis that combines yt's code and the mental models of domain scientists derived from their domain stories. The output of this work is a JSON schema that is structured with relevant domain context to accommodate domain specific data. This work will also lower the barrier for contributor entry, as domain scientists will be able to directly contribute domain expertise to yt through the schema, without having in depth knowledge of the yt code.

This is the first step to investigating the mental model and code objects, attributes and inter-relationships that are shared across natural science domains including oceanography, climate and weather, neuroscience and geophysics. The JSON schema will be extendable across domains and can be implemented in existing science software tools to support interdisciplinary lines of scientific inquiry with a dynamic and context driven framework. As we investigate how best to capture and encode domain expertise, we hope this work will be a model for future open source development and create a novel avenue for dynamic, and domain agnostic tooling.
